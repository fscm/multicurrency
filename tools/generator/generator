#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# copyright: 2020-2021, Frederico Martins
# author: Frederico Martins <http://github.com/fscm>
# license: SPDX-License-Identifier: MIT

"""Currency generator.

Creates specific versions of Currency based on the info present on the
`currency.csv` file.

Simple usage example:

    ./generator
    ls _multicurrency/
    ls _tests/

The `currency.csv` file format is one currency per line with the details
separated by a coma (',') and in the following order:

    "Currency","Symbol","Digital code","Name","Country","Decimal Places","Decimal Sign","Grouping Sign"

`currency.csv` file example:

    "AED","د.إ","784","UAE Dirham","UAE","2",",","."
    "AFN","Af","971","Afghani","Afghanistan","2",",","."
    "ALL","L","008","Lek","Albania","2",",","."
    "AMD","Դ","051","Armenian Dram","Armenia","2",",","."
"""

import csv
import re
import os
from decimal import Context

CONTEXT = Context(prec=28, rounding='ROUND_HALF_EVEN').copy()

work_folder = os.path.dirname(os.path.realpath(__file__))
currency_list = {}

decimal = CONTEXT.create_decimal(1) / CONTEXT.create_decimal(7)


print('Loading CSV data...')
with open(f'{work_folder}/currency.csv') as csv_file:
    csv_reader = csv.reader(csv_file, delimiter=',')
    next(csv_reader, None)
    for record in csv_reader:
        currency_name = record[3]
        currency_variable = currency_name.lower().replace(' ', '_').replace('’', '').replace('\'', '')
        currency_class = currency_name.replace(' ', '').replace('’', '').replace('\'', '')
        currency = record[0]
        symbol = record[1]
        code = record[2]
        country = record[4]
        decimal_places = int(record[5])
        decimal_sign = record[6]
        grouping_sign = record[7]
        _ = currency_list.setdefault(currency_name, {
            'currency_name': currency_name,
            'currency_variable': currency_variable,
            'currency_class': currency_class,
            'currency': currency,
            'decimal_places': decimal_places,
            'decimal_sign': decimal_sign,
            'grouping_sign': grouping_sign,
            'symbol': symbol,
            'code': code})

print('Creating currency types...')
for _, currency in currency_list.items():
    file_in = open(f'{work_folder}/currency.tmpl', 'r+')
    file_out = open(
        f'{work_folder}/_multicurrency/{currency["currency_variable"]}.py', 'w+')
    text = file_in.read()
    decimal_zeros = '0' * currency['decimal_places']
    decimal_sign = f'{currency["decimal_sign"]}' if currency['decimal_places'] else ''
    decimal_part = f'{decimal_sign}{decimal_zeros}'
    grouping_sign_alt = f'\{currency["grouping_sign"]}' if currency['grouping_sign'] == '\'' else f'{currency["grouping_sign"]}'
    text = re.sub('\[CURRENCY_NAME\]', currency['currency_name'], text)
    text = re.sub('\[CURRENCY_CLASS\]', currency['currency_class'], text)
    text = re.sub('\[CURRENCY_VARIABLE\]', currency['currency_variable'], text)
    text = re.sub('\[DECIMAL_PLACES\]', str(currency['decimal_places']), text)
    text = re.sub('\[DECIMAL_PART\]', decimal_part, text)
    text = re.sub('\[DECIMAL_SIGN\]', currency['decimal_sign'], text)
    text = re.sub('\[GROUPING_SIGN\]', currency['grouping_sign'], text)
    text = re.sub('\[GROUPING_SIGN_ALT\]', grouping_sign_alt, text)
    text = re.sub('\[CURRENCY\]', currency['currency'], text)
    text = re.sub('\[SYMBOL\]', currency['symbol'], text)
    text = re.sub('\[CODE\]', currency['code'], text)
    _ = file_out.write(text)
    _ = file_out.truncate()
    file_in.close()
    file_out.close()

print('Creating test files...')
for _, currency in currency_list.items():
    file_in = open(f'{work_folder}/test_currency.tmpl', 'r+')
    file_out = open(
        f'{work_folder}/_tests/test_{currency["currency_variable"]}.py', 'w+')
    text = file_in.read()
    decimal_zeros = '0' * currency['decimal_places']
    decimal_sign = f'{currency["decimal_sign"]}' if currency['decimal_places'] else ''
    decimal_part = f'{decimal_sign}{decimal_zeros}'
    grouping_sign_alt = f'\{currency["grouping_sign"]}' if currency['grouping_sign'] == '\'' else f'{currency["grouping_sign"]}'
    text = re.sub('\[CURRENCY_NAME\]', currency['currency_name'], text)
    text = re.sub('\[CURRENCY_CLASS\]', currency['currency_class'], text)
    text = re.sub('\[CURRENCY_VARIABLE\]', currency['currency_variable'], text)
    text = re.sub('\[DECIMAL_PLACES\]', str(currency['decimal_places']), text)
    text = re.sub('\[DECIMAL_PART\]', decimal_part, text)
    text = re.sub('\[DECIMAL_SIGN\]', currency['decimal_sign'], text)
    text = re.sub('\[GROUPING_SIGN\]', currency['grouping_sign'], text)
    text = re.sub('\[GROUPING_SIGN_ALT\]', grouping_sign_alt, text)
    text = re.sub('\[CURRENCY\]', currency['currency'], text)
    text = re.sub('\[SYMBOL\]', currency['symbol'], text)
    text = re.sub('\[CODE\]', currency['code'], text)
    text = re.sub('\[1DIV7\]', str(round(decimal, currency['decimal_places'])).replace('.', currency['decimal_sign']), text)
    _ = file_out.write(text)
    _ = file_out.truncate()
    file_in.close()
    file_out.close()

print()
print('Generating __init__.py file data...')
print()
print('Imports:')
for c in sorted(currency_list.keys()):
    currency = currency_list[c]
    print(f'from .{currency["currency_variable"]} import {currency["currency_class"]}')
print()
print('__all__:')
for c in sorted(currency_list.keys()):
    currency = currency_list[c]
    print(f'    \'{currency["currency_class"]}\',')
print()
# print('Supported:')
# for c in sorted(currency_list.keys()):
#     currency = currency_list[c]
#     eg = getattr(multicurrency, currency['currency_class'])(1000)
#     print('`'+f"multicurrency.{currency['currency_variable']}.{currency['currency_class']}"'`'+f' ({eg})'+', ')
