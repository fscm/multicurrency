from decimal import Decimal
from multicurrency.pycurrency import Currency
from typing import Optional, Union

class EgyptianPound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> EgyptianPound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> EgyptianPound: ...

class FalklandIslandsPound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> FalklandIslandsPound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> FalklandIslandsPound: ...

class PoundSterling(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> PoundSterling: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> PoundSterling: ...

class PoundSterlingGG(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> PoundSterlingGG: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> PoundSterlingGG: ...

class PoundSterlingIO(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> PoundSterlingIO: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> PoundSterlingIO: ...

class PoundSterlingGB(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> PoundSterlingGB: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> PoundSterlingGB: ...

class PoundSterlingIM(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> PoundSterlingIM: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> PoundSterlingIM: ...

class GibraltarPound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> GibraltarPound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> GibraltarPound: ...

class LebanesePound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> LebanesePound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> LebanesePound: ...

class SudanesePound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> SudanesePound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> SudanesePound: ...

class SaintHelenaPoundAI(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> SaintHelenaPoundAI: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> SaintHelenaPoundAI: ...

class SaintHelenaPound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> SaintHelenaPound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> SaintHelenaPound: ...

class SaintHelenaPoundTC(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> SaintHelenaPoundTC: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> SaintHelenaPoundTC: ...

class SyrianPound(Currency):
    def __new__(cls, amount: Union[str, int, float, Decimal], pattern: Optional[str] = ...) -> SyrianPound: ...
    def __recreate__(self, amount: Union[str, int, float, Decimal]) -> SyrianPound: ...
